#create a pod with nginx image

apiVersion: v1
kind: Pod
metadata:
  name: nginx-06
  labels:
    appName: nginx
    example: service
spec:
  containers:
    - name: nginx
      image: docker.io/nginx

---

#create a service and associate with nginx pod
apiVersion: v1
kind: Service
metadata:
  name: nginx-06
spec:
  selector:
    appName: nginx
    example: service
  ports:
    - protocol: TCP
      port: 80 #service port
      targetPort: 80 #container port

---
#create a debug pod
apiVersion: v1
kind: Pod
metadata:
  name: debug-06
spec:
  containers:
    - name: debug
      image: docker.io/rkalluru/debug
---
#create a nodeport. if the nodeport is not specifically mentioned, a random port is opened.
apiVersion: v1
kind: Service
metadata:
  name: nginx-06-np
spec:
  type: NodePort
  selector:
    appName: nginx
    example: service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      #nodePort: 30007 - an example. since this is not defined here, it will be random
---
#create a load balancer
apiVersion: v1
kind: Service
metadata:
  name: nginx-06-lb
spec:
  type: LoadBalancer
  selector:
    appName: nginx
    example: service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
#to create a headless service. Documentation - https://www.baeldung.com/ops/kubernetes-headless-service
apiVersion: v1
kind: Service
metadata:
  name: nginx-06-headless
spec:
  selector:
    appName: nginx
    type: deploy
  clusterIP: None
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy-06
  labels:
    appName: nginx
    type: deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      appName: nginx
      type: deploy
  template:
    metadata:
      labels:
        appName: nginx
        type: deploy
    spec:
      containers:
      - name: nginx
        image: docker.io/nginx:1.24




