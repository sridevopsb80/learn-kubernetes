#Documentation - https://kubernetes.io/docs/reference/access-authn-authz/rbac/
#https://kubernetes:io/docs/concepts/security/rbac-good-practices/


#creating a service account called debug in default namespace

apiVersion: v1
kind: ServiceAccount
metadata:
  name: debug
  namespace: default

---

#assigning debug service account to pod named debug in default namespace

apiVersion: v1
kind: Pod
metadata:
  name: debug
  namespace: default
spec:
  serviceAccountName: debug
  containers:
    - name: debug
      image: rkalluru/debug
---

#creating a role to attach to a resource. similar to a policy in aws

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: default
  name: default-ns-pod-reader
#for the listed apigroups, pods can get, watch and list
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
#binding the role that was created to the service account. similar to a role in aws

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: default-ns-pod-reader-to-debug-sa
  namespace: default
roleRef:
  kind: Role
  name: default-ns-pod-reader #role name
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: debug #service account name
  namespace: default
---
### Get one more namespace access for debug pod
#kubectl get clusterroles - to get available roles

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-system-ns-pod-reader-to-debug-sa
  namespace: kube-system
roleRef:
  kind: ClusterRole #
  name: view #role can be obtained from the above command
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: debug
  namespace: default





